---
stream_over_http_enabled: true
server:
  http_listen_port: 3200
  log_level: info


cache:
  background:
    writeback_goroutines: 5
  caches:
  - roles:
    - frontend-search  
    memcached: 
      host: memcached:11211

query_frontend:
  search:
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09
  trace_by_id:
    duration_slo: 5s

distributor:
  receivers:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:

ingester:
  max_block_duration: 5m

compactor:
  compaction:
    block_retention: 1h                # overall Tempo trace retention. set for demo purposes

metrics_generator:
  processor:
    # Span metrics create metrics based on span type, duration, name and service.
    span_metrics:
      # Configure extra dimensions to add as metric labels.
      dimensions:
        - http.method
        - http.target
        - http.status_code
        - service.version
    # Service graph metrics create node and edge metrics for determing service interactions.
    service_graphs:
      # Configure extra dimensions to add as metric labels.
      dimensions:
        - http.method
        - http.target
        - http.status_code
        - service.version
    # Configure the local blocks processor.
    local_blocks:
      # Ensure that metrics blocks are flushed to storage so TraceQL metrics queries against historical data.
      flush_to_storage: true
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    path: /var/tempo/generator/wal
    remote_write:
      - url: http://prometheus:9090/api/v1/write
        send_exemplars: true
  traces_storage:
    path: /var/tempo/generator/traces

storage:
  trace:
    backend: local                     # backend configuration to use
    wal:
      path: /var/tempo/wal             # where to store the wal locally
    local:
      path: /var/tempo/blocks

overrides:
  defaults:
    metrics_generator:
      processors: [service-graphs, span-metrics, local-blocks] # enables metrics generator
      generate_native_histograms: both
